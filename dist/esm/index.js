var g=Object.defineProperty;var w=(s,t)=>g(s,"name",{value:t,configurable:!0});var m=(s,t,n)=>new Promise((c,r)=>{var d=e=>{try{o(n.next(e))}catch(i){r(i)}},l=e=>{try{o(n.throw(e))}catch(i){r(i)}},o=e=>e.done?c(e.value):Promise.resolve(e.value).then(d,l);o((n=n.apply(s,t)).next())});function M(s){return m(this,null,function*(){let{chunkSize:t=1024*1024,threadCount:n=navigator.hardwareConcurrency||4,workerScript:c,file:r}=s;if(!r)throw new Error("file is required");return new Promise((d,l)=>{let o=Math.ceil(r.size/t),e=[],i=Math.ceil(o/n),k=0;for(let a=0;a<n;a++){let u=typeof c=="string"?new Worker(c,{type:"module"}):c(),f=a*i,C=Math.min((a+1)*i,o);u.postMessage({file:r,chunkSize:t,startChunkIndex:f,endChunkIndex:C}),u.onmessage=p=>{for(let h=f;h<C;h++)e[h]=p.data[h-f];u.terminate(),k++,k===n&&d(e)},u.onerror=l}})})}w(M,"sliceFile");export{M as sliceFile};
